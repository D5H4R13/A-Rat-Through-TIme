[gd_scene load_steps=7 format=3 uid="uid://dyogrw143k20i"]

[sub_resource type="GDScript" id="GDScript_wnlte"]
script/source = "extends Control
func _ready ():
	$AnimationPlayer.play(\"RESET\")

func resume():
	get_tree().paused = false
	$\".\".visible = false
	$AnimationPlayer.play_backwards (\"blur\")

func pause():
	get_tree().paused = true
	$\".\".visible = true
	$AnimationPlayer.play(\"blur\")

func testEsc() :
	if Input.is_action_just_pressed(\"esc\") and !get_tree().paused:
		pause()
	elif Input.is_action_just_pressed(\"esc\") and get_tree().paused:
		resume()



func _on_resume_pressed():
	resume()


func _on_restart_pressed():
	resume()
	get_tree().reload_current_scene()


func _on_quit_pressed():
	get_tree().paused = false
	$\".\".visible = false
	get_tree().change_scene_to_file(\"res://scene/world and level select/world_select.tscn\")

func _process(delta):
	testEsc()
"

[sub_resource type="Shader" id="Shader_hph4e"]
code = "shader_type canvas_item;
uniform sampler2D SCREEN_TEXTURE: hint_screen_texture, filter_linear_mipmap;
uniform float lod: hint_range(0.0, 5) = 0.0;
void fragment(){
	vec4 color = texture(SCREEN_TEXTURE, SCREEN_UV, lod);
	COLOR = color;
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_emr23"]
shader = SubResource("Shader_hph4e")
shader_parameter/lod = 0.0

[sub_resource type="Animation" id="Animation_32agc"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("ColorRect:material:shader_parameter/lod")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [0.0]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("PanelContainer:modulate")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Color(1, 1, 1, 0)]
}

[sub_resource type="Animation" id="Animation_w2j83"]
resource_name = "blur"
length = 0.3
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("ColorRect:material:shader_parameter/lod")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [0.0]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("PanelContainer:modulate")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 0.3),
"transitions": PackedFloat32Array(1, 1),
"update": 0,
"values": [Color(1, 1, 1, 0), Color(1, 1, 1, 1)]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_6pp7a"]
_data = {
"RESET": SubResource("Animation_32agc"),
"blur": SubResource("Animation_w2j83")
}

[node name="PauseMenu" type="Control"]
process_mode = 3
layout_mode = 3
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
script = SubResource("GDScript_wnlte")

[node name="ColorRect" type="ColorRect" parent="."]
material = SubResource("ShaderMaterial_emr23")
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2

[node name="PanelContainer" type="PanelContainer" parent="."]
modulate = Color(1, 1, 1, 0)
layout_mode = 1
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = -35.0
offset_top = -33.0
offset_right = 35.0
offset_bottom = 33.0
grow_horizontal = 2
grow_vertical = 2

[node name="VBoxContainer" type="VBoxContainer" parent="PanelContainer"]
layout_mode = 2
size_flags_horizontal = 4
size_flags_vertical = 4

[node name="Resume" type="Button" parent="PanelContainer/VBoxContainer"]
layout_mode = 2
text = "Resume"

[node name="Restart" type="Button" parent="PanelContainer/VBoxContainer"]
layout_mode = 2
text = "Restart
"

[node name="Quit" type="Button" parent="PanelContainer/VBoxContainer"]
layout_mode = 2
text = "Quit
"

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
libraries = {
"": SubResource("AnimationLibrary_6pp7a")
}

[connection signal="pressed" from="PanelContainer/VBoxContainer/Resume" to="." method="_on_resume_pressed"]
[connection signal="pressed" from="PanelContainer/VBoxContainer/Restart" to="." method="_on_restart_pressed"]
[connection signal="pressed" from="PanelContainer/VBoxContainer/Quit" to="." method="_on_quit_pressed"]
